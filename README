Sidekiq Example
========================

Web apps should do high-resource tasks in the background, for such resources as
memory, CPU, disk I/O, and network I/O. Some user requests may result in
queueing a background task, such as

* sending email
* sending SMS
* anything involving a call to an external API
* long database queries
* generating formatted reports

There may also be recurring tasks like daily reports, purging old or inactive
records from the database, or monthly billing. Those can be set up as cron
jobs, but that requires updating yet another system when the intervals change,
or another task needs to be added.

This project accepts user registration and sends a confirmation email. We would
like to schedule a followup email, if possible. There is a daily email to the
admin listing new users and changing the user's bikeshed limit causes a
potentially long calculation. There is no background processing in the master
branch, and sidekiq is used in the 'sidekiq' branch.

You can see the difference between the two branches with 

$ git diff master sidekiq

The doc/links.txt file contains a list of links to articles about installing,
using, and testing sidekiq in Rails apps.

Please send pull requests for new branches using other background processing
frameworks.

License: MIT
